@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using DataLayer.Models

@model UserView

@{
    ViewData["Title"] = "Min profil";

    User _user = new User();

    bool ProfilRegistrerad = false;
}

<!--Tilldela _user värden för den som är inloggad
    och sätt ProfilRegistrerad till true-->
@foreach (var item in Model.Users)
{
    if (SignInManager.IsSignedIn(User) && User.Identity.Name.Equals(item.UserName))
    {
        _user = item;
        ProfilRegistrerad = true;
    }
}

@{
    bool HaveFriendRequest = false;

    string name = _user.FirstName + " " + _user.LastName;
    string age = _user.Age.ToString() + " år gammal";
    string editProfileUrl = "/Users/Edit/" + _user.Id;
    List<User> friendList = new List<User>();

    List<FriendRequest> friendRequests = new List<FriendRequest>();
}


<!--Leta efter friendrequests att visa-->
@foreach (var item in Model.FriendRequests)
{
    if (item.Receiver.Id == _user.Id)
    {
        friendRequests.Add(item);
        HaveFriendRequest = true;
    }
}

<!--Fyll på vänlistan-->
@foreach (var item in Model.Friends)
{
    if (item.Friend_1.Id == _user.Id)
    {
        friendList.Add(item.Friend_2);
    }

    if (item.Friend_2.Id == _user.Id)
    {
        friendList.Add(item.Friend_1);
    }
}


<!--Om ej inloggad-->
@if (!SignInManager.IsSignedIn(User))
{
    <div class="text-center">
        <p>Du måste logga in för att se din profil</p>
        <a href="/Identity/Account/Login"><p>Logga in</p></a>
        <br />
        <p>Har du inget konto?</p>
        <a href="/Identity/Account/Register"><p>Registrera dig</p></a>

    </div>
}

<!--Om inloggad men ej satt upp sin profil-->
@if (SignInManager.IsSignedIn(User) && ProfilRegistrerad == false)
{
    <div class="text-center">
        <h1>Du har inte fixat din profilsida ännu!</h1>
        <h2>Klicka här för att komma dit: </h2>
        <a href="/Users/Create">Skapa profil</a>
    </div>
}

<!--Om inloggad och satt up sin profil-->
@if (SignInManager.IsSignedIn(User) && ProfilRegistrerad == true)
{
    if (HaveFriendRequest)
    {
        <!--Visa vänförfrågningar-->
        <div style="overflow: hidden">
            <marquee>
                <p id="vänförfrågan">
                    Du har fått vänförfrågning av: &nbsp;

                    <!--Loopa genom FriendRequests och se ifall den inloggade
                    fått friendrequest-->
                    <!--Skriv ut de som skickat vänförfrågan-->
                    @foreach (var item in friendRequests)
                    {
                        string senderName = item.Sender.FirstName + " " + item.Sender.LastName;
                        <a id="friendRequestSlider" href="Users/Details/@item.Sender.Id">@senderName &nbsp; &nbsp;</a>
                    }
                </p>
            </marquee>
        </div>
    }

    <!--Info om användaren-->
    <!--Vänstra delen av sidan-->
    <h1 id="HeaderText">@name</h1>

    <div class="StoraDiven">
        <div class="BildochText">
            <img id="bild" src="@_user.ProfilePicture" />
            <div>
                <h4>Namn</h4>
                <p class="ProfilText">@name</p>
            </div>
            <div>
                <h4>Ålder</h4>
                <p class="ProfilText">@age</p>
            </div>
            <div>
                <h4>Kön</h4>
                <p class="ProfilText">@_user.Gender</p>
            </div>
            <div>
                <h4>Om mig</h4>
                <p class="ProfilText">@_user.Description</p>
            </div>
            <div class="Friends">
                <h4>Vänner</h4>
                <ul>
                    <!--Fyll på vänlista-->
                    @foreach (var item in friendList)
                    {
                        //Om friend-kontot är inaktiverat ska det ej visas
                        if (item.IsInactivated == false)
                        {
                            string friendName = item.FirstName + " " + item.LastName;
                            <a id="friendLink" href="/Users/Details/@item.Id"><li>@friendName</li></a>
                        }
                    }
                </ul>
            </div>

            <br />
            <a href="@editProfileUrl">Redigera Profil</a>
            <br />
            <a href="/Identity/Account/Manage">Redigera Inloggningsuppgifter</a>

            <!--Högra delen av sidan-->
        </div>
        <div class="Väggen">
            <!--Skriv ut de som nyligen besökt sidan-->
            <div id="senastBesokta">
                <h6>
                    Användare som nyligen besökt din sida:
                </h6>
                <p>
                    @foreach (var item in Model.Visitors)
                    {
                        @if (item.ProfileVisited.Id == _user.Id)
                        {
                            string visitedBy = item.VisitedBy.FirstName + " " + item.VisitedBy.LastName;
                            <a href="/Users/Details/@item.VisitedBy.Id">@visitedBy &nbsp;</a>
                        }

                    }
                <p>
            </div>
            <br />

            <h4>Vägg</h4>
            <textarea id="txtAreaMsg" type="text" rows="5" cols="60" name="description"></textarea><input type="button" value="Skicka Meddelande" id="MessageBtn" />
            <div id="TheWall">

                @{//Loop för att fylla i alla meddelanden
                    //Gå genom alla meddelanden i databas
                    foreach (var item in Model.Messages)
                    {
                        //Om meddelandet är till den nuvarande profilens sida
                        if (item.Receiver == _user)
                        {
                            var senderName = "";
                            //Hämta namnet på användare som skickat meddelande
                            foreach (var sender in Model.Users)
                            {
                                if (sender == item.Sender)
                                {
                                    senderName = sender.FirstName + " " + sender.LastName;
                                }
                            }
                            string senderMessage = senderName + ": " + item.Message;

                            <p id="wallText">@senderMessage</p>
                            <hr />
                        }

                    }
                }

            </div>

        </div>
    </div>
}

<script>
    var btnMessage = document.getElementById('MessageBtn');
    btnMessage.addEventListener("click", PostMessage);

    var inloggad = @Html.Raw(Json.Serialize(_user));

    function PostMessage()
    {
        var textAreaValue = document.getElementById('txtAreaMsg').value;
        //Checka ifall tom ruta
        if (textAreaValue != "")
        {
            var message = { Sender: inloggad.id, Receiver: inloggad.id, Message: textAreaValue }
            $.ajax({
                url: "/api/UserWalls/PostMessage",
                type: 'POST',
                data: JSON.stringify(message),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: alert("Meddelandet har skickats!")
            })

            //Skapa variabel med sändare och meddelande
            var senderMessage = inloggad.firstName + " " + inloggad.lastName + ": " + textAreaValue;

            //Skapa taggar och appenda meddelandet på väggen
            var node = document.createElement("P");
            var hrNode = document.createElement("hr");
            node.setAttribute("id", "wallText");
            var textnode = document.createTextNode(senderMessage);
            node.appendChild(textnode);
            node.appendChild(hrNode);

            document.getElementById("TheWall").appendChild(node);

            //rensa textrutan
            document.getElementById("txtAreaMsg").value = "";
        }
        else
            alert("Rutan får inte vara tom!")

    }
</script>


<style>
    #HeaderText {
        font-weight: normal;
        text-align: center;
        margin-bottom: 5%;
    }

    .ProfilText {
        width: 100%;
    }

    .StoraDiven {
        display: flex;
    }

    .BildochText {
        width: 30%;
        height: auto;
    }

    .InfoDiven {
        width: 30%;
        height: auto;
    }

    .Väggen {
        width: 60%;
        height: auto;
        margin-left: 5%;
    }

    #senastBesokta {
        width: 70%;
        border: solid;
        border-width: .03em;
        text-align: center;
    }

    #TheWall {
        width: 100%;
        min-height: 20%;
        height: auto;
        margin-top: 3%;
        border: solid;
        border-radius: 1em;
    }

    #wallText {
        margin-left: 1em;
        margin-right: 1em;
        margin-top: .5em;
        margin-bottom: .5em;
    }

    hr {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
        margin-left: auto;
        margin-right: auto;
        border-style: inset;
        border-width: 1px;
    }

    .Friends {
        border: solid;
        border-radius: 1em;
    }

    ul {
        list-style: none;
    }

    #bild {
        max-width: 100%;
        max-height: 50%;
    }

    .MessageBtn {
        background-color: blue;
        border: solid;
        border-color: black;
        border-radius: 2em;
    }

    #friendLink {
        color: black;
        text-decoration: none;
        width: auto;
    }

    ul {
        width: auto;
    }

    #friendLink:hover {
        color: red;
    }

    .marquee {
        margin: 0 auto;
        white-space: nowrap;
        overflow: hidden;
    }

        .marquee span {
            display: inline-block;
            padding-left: 100%;
            animation: marquee 5s linear infinite;
        }

    #vänförfrågan {
        background-image: linear-gradient(to left, violet, indigo, blue, green, orange, red, violet, indigo, blue, green, orange, red, violet, indigo, blue, green, orange, red, violet, indigo, blue, green, orange, red);
        -webkit-background-clip: text;
        color: transparent;
    }

    #friendRequestSlider {
        text-decoration: none;
        color: blue;
    }

        #friendRequestSlider:hover {
            text-decoration: underline;
            color: red;
        }
</style>
