@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using DataLayer.Models

@model UserView

@{
    ViewData["Title"] = "Min profil";

    User _user = new User();
}

@foreach (var item in Model.Users)
{
    if (item.UserName.Equals(User.Identity.Name))
    {
        _user = item;
    }
}
@{
    bool ProfilRegistrerad = false;
    string name = _user.FirstName + " " + _user.LastName;
    string age = _user.Age.ToString() + " år gammal";
    string editProfileUrl = "/Users/Edit/" + _user.Id;
}

@foreach (var item in Model.Users)
{
    if (SignInManager.IsSignedIn(User) && User.Identity.Name.Equals(item.UserName))
    {
        ProfilRegistrerad = true;
    }
}

@if (!SignInManager.IsSignedIn(User))
{
<div class="text-center">
    <p>Du måste logga in för att se din profil</p>
    <a href="/Identity/Account/Login"><p>Logga in</p></a>
    <br />
    <p>Har du inget konto?</p>
    <a href="/Identity/Account/Register"><p>Registrera dig</p></a>

</div>
}

else if (SignInManager.IsSignedIn(User) && ProfilRegistrerad == false)
{
    <div class="text-center">
         <h1>Du har inte fixat din profilsida ännu!</h1>
         <h2>Klicka här för att komma dit: </h2>
         <a href="/Users/Create">Skapa profil</a>
    </div>
}

else
{
    <h1 id="HeaderText">@name</h1>

    <div class="StoraDiven">
        <div class="BildochText">
            <img id="bild" src="@_user.ProfilePicture" />
            <div>
                <h4>Namn</h4>
                <p class="ProfilText">@name</p>
            </div>
            <div>
                <h4>Ålder</h4>
                <p class="ProfilText">@age</p>
            </div>
            <div>
                <h4>Kön</h4>
                <p class="ProfilText">@_user.Gender</p>
            </div>
            <div>
                <h4>Om mig</h4>
                <p class="ProfilText">@_user.Description</p>
            </div>
            <div class="Friends">
                <h4>Vänner</h4>
                <ul>
                    <li>
                        Vän 1
                    </li>
                    <li>
                        Vän 2
                    </li>
                    <li>
                        Vän 3
                    </li>
                    <li>
                        Vän 4
                    </li>
                </ul>
            </div>
        </div>
        <div class="Väggen">
            <h4>Vägg</h4>
            <textarea id="txtAreaMsg" type="text" rows="5" cols="60" name="description"></textarea><input type="button" value="Skicka Meddelande" id="MessageBtn" />
            <div id="TheWall">
               
                @{//Loop för att fylla i alla meddelanden
                    //Gå genom alla meddelanden i databas
                    foreach(var item in Model.Messages)
                    {
                        //Om meddelandet är till den nuvarande profilens sida
                        if (item.Receiver == _user)
                        {
                            var senderName = "";
                            //Hämta namnet på användare som skickat meddelande
                            foreach (var sender in Model.Users)
                            {
                                if (sender == item.Sender)
                                {
                                    senderName = sender.FirstName + " " + sender.LastName;
                                }
                            }
                            string senderMessage = senderName + ": " + item.Message;

                                <p>@senderMessage</p>
                        }
                                
                    }
                }

            </div>

            <br />
            <a href="@editProfileUrl">Redigera Profil</a>
            <br />
            <a href="/Identity/Account/Manage">Redigera Inloggningsuppgifter</a>
        </div>
    </div>
}

<script>
    var btnMessage = document.getElementById('MessageBtn');
    btnMessage.addEventListener("click", PostMessage);

    var hej = @Html.Raw(Json.Serialize(@Model.Users));

    var inloggad = @Html.Raw(Json.Serialize(_user));
    
    function PostMessage()
    {
        var textAreaValue = document.getElementById('txtAreaMsg').value;
        //Checka ifall tom ruta
        if (textAreaValue != "")
        {
            var message = { Sender: inloggad.id, Receiver: inloggad.id, Message: textAreaValue }
            $.ajax({
                url: "/api/UserWalls/PostMessage",
                type: 'POST',
                data: JSON.stringify(message),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: alert("Meddelandet har skickats!")
            })

            //Skapa variabel med sändare och meddelande
            var senderMessage = inloggad.firstName + " " + inloggad.firstName + ": " + textAreaValue;

            //Skapa taggar och appenda meddelandet på väggen
            var node = document.createElement("P");
            var textnode = document.createTextNode(senderMessage);
            node.appendChild(textnode);

            document.getElementById("TheWall").appendChild(node);

            //rensa textrutan
            document.getElementById("txtAreaMsg").value = "";
        }
        else
            alert("Rutan får inte vara tom!")
        
    }
</script>

<style>
    #HeaderText {
        font-weight:normal;
        text-align: center;
        margin-bottom: 5%;
    }

    .ProfilText {
        width: 100%;
    }

    .StoraDiven {
        display: flex;
    }

    .BildochText {
        width: 30%;
        height: auto;
    }

    .InfoDiven {
        width: 30%;
        height: auto;
    }

    .Väggen {
        width: 60%;
        height: auto;
        margin-left: 5%;
    }

    #TheWall {
        width: 100%;
        min-height: 20%;
        height: auto;
        margin-top: 3%;
        border: solid;
        border-radius: 1em;
    }

    .Friends {
        border: solid;
        border-radius: 1em;
    }

    ul {
        list-style: none;
    }

    #bild {
        max-width: 100%;
        max-height: 50%;
    }

    .MessageBtn {
        background-color: blue;
        border: solid;
        border-color: black;
        border-radius: 2em;
    }
</style>
